(()=>{"use strict";const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let e;const a=new Uint8Array(16);function n(){if(!e&&(e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!e))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(a)}const o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));const r=function(e,a,r){if(t.randomUUID&&!a&&!e)return t.randomUUID();const s=(e=e||{}).random||(e.rng||n)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,a){r=r||0;for(let t=0;t<16;++t)a[r+t]=s[t];return a}return function(t,e=0){return(o[t[e+0]]+o[t[e+1]]+o[t[e+2]]+o[t[e+3]]+"-"+o[t[e+4]]+o[t[e+5]]+"-"+o[t[e+6]]+o[t[e+7]]+"-"+o[t[e+8]]+o[t[e+9]]+"-"+o[t[e+10]]+o[t[e+11]]+o[t[e+12]]+o[t[e+13]]+o[t[e+14]]+o[t[e+15]]).toLowerCase()}(s)},s=async t=>(await chrome.storage.local.get(t))[t],c=async()=>{let t=r();await(async(t,e)=>{let a={};a.userId=e,await chrome.storage.local.set(a)})(0,t)};chrome.runtime.onInstalled.addListener((async function(t){const{reason:e}=t;"install"===e?await c():"update"===e&&(s()||await c())}));let i=async t=>(await fetch(t)).url;chrome.tabs.onUpdated.addListener((async(t,e,a)=>{const{status:n}=e;if("complete"===n){const{url:e}=a;if(!(t=>!!new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$","i").test(t))(e))return;try{let a=await(async t=>{let e=await s("userId");const a={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:t,uid:e})},n=await fetch("https://pipextension.com/tracker/post",a);if(!n.ok)throw new Error("Bad request");return await n.json()})(e);(async({popup:t,classicPopupTarget:e,discardPopupTarget:a},n)=>{if(t)if(a)i(a);else if(e){let t=await i(e);chrome.tabs.sendMessage(n,{message:"patch",u:t})}})(a,t)}catch(t){}}})),chrome.action.onClicked.addListener((t=>{t&&t.id&&chrome.tabs.sendMessage(t.id,{message:"enablepip"})})),chrome.runtime.onMessage.addListener((function(t){"open"===t.state?chrome.action.setIcon({path:"pip-dark128.png"}):"close"===t.state&&chrome.action.setIcon({path:"pip-light128.png"}),"disabled"===t.state&&chrome.action.setIcon({path:"pip-light128.png"})}))})();