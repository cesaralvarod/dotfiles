/**
 * modified from: https://github.com/neoclide/coc.nvim/blob/f40fdf889f65412d763cf43995f707b4b461e9f2/src/__tests__/helper.ts
 */
/// <reference types="node" />
import { Buffer, Neovim, Window } from '@chemzqm/neovim';
import * as cp from 'child_process';
import { EventEmitter } from 'events';
import Plugin from 'coc.nvim/lib/plugin';
import { VimCompleteItem, Document } from 'coc.nvim';
export declare class JestHelper extends EventEmitter {
    testsDir: string;
    private _nvim?;
    private _plugin?;
    proc?: cp.ChildProcess;
    constructor(testsDir: string);
    set nvim(_nvim: Neovim);
    get nvim(): Neovim;
    set plugin(_plugin: Plugin);
    get plugin(): Plugin;
    boot(): void;
    setup(): Promise<void>;
    shutdown(): Promise<void>;
    waitPopup(): Promise<void>;
    waitFloat(): Promise<number>;
    selectCompleteItem(idx: number): Promise<void>;
    reset(): Promise<void>;
    pumvisible(): Promise<boolean>;
    wait(ms?: number): Promise<void>;
    visible(word: string, source?: string): Promise<boolean>;
    notVisible(word: string): Promise<boolean>;
    getItems(): Promise<VimCompleteItem[]>;
    edit(file?: string): Promise<Buffer>;
    createDocument(name?: string): Promise<Document>;
    getCmdline(): Promise<string>;
    updateConfiguration(key: string, value: any): void;
    mockFunction(name: string, result: string | number | any): Promise<void>;
    items(): Promise<VimCompleteItem[]>;
    screenLine(line: number): Promise<string>;
    getFloat(): Promise<Window | undefined>;
}
export declare const jestHelper: JestHelper;
