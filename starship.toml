scan_timeout = 60
add_newline = true

#format = """
#[╭─user───❯](bold blue) $username
#[┣─system─❯](bold yellow) $hostname
#[┣─project❯](bold red) $directory$rust$git_branch$git_status$package$golang$terraform$docker_context$python$docker_context$nodejs
#[╰─cmd────❯](bold green) 
#"""

[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style) on "
disabled = false
show_always = false

[hostname]
ssh_only = false
format = '[$hostname](bold yellow) '
trim_at = "."
disabled = false

[line_break]
disabled = false

[directory]
style = "bold italic blue"
read_only = " "
truncation_length = 10
truncate_to_repo = true # truncates directory to root folder if in github repo

[cmd_duration]
style = "bold italic red"
format = "[$duration]($style) "
disabled = false
min_time = 4
show_milliseconds = false

[status]
disabled = false
format = "[$symbol $status]($style) "
not_found_symbol = ""
not_executable_symbol = ""
sigint_symbol = "ﭦ"
map_symbol = true

# Replace the "❯" symbol in the prompt with "➜"
[character]                            # The name of the module we are configuring is "character"
success_symbol = "[﬌](bold green) "     # The "success_symbol" segment is being set to "➜" with the color "bold green"
error_symbol = "[✗](bold red) "

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[git_branch]
format = "[$symbol$branch]($style) "
symbol = " "

[package]
format = "[$symbol$version]($style) "
symbol = " "

# [python]
# format = '[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
# symbol = " "

[python]
symbol = " "
# pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[nodejs]
format = "via [ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

[php]
format = "[$symbol($version )]($style)"
symbol = " "

[java]
format = "[${symbol}(${version} )]($style)"
symbol = " "

[rust]
format = "[$symbol($version )]($style)"

[golang]
format = "[$symbol($version )]($style)"
symbol = " "

[aws]
format = "[$symbol($version )]($style)"
symbol = "  "

[conda]
format = "[$symbol($version )]($style)"
symbol = " "

[dart]
format = "[$symbol($version )]($style)"
symbol = " "

[elixir]
symbol = " "
format = "[$symbol($version )]($style)"

[elm]
symbol = " "
format = "[$symbol($version )]($style)"

[hg_branch]
symbol = " "
format = "[$symbol($version )]($style)"

[julia]
symbol = " "
format = "[$symbol($version )]($style)"

[memory_usage]
symbol = "󰍛 "
format = "[$symbol($version )]($style)"

[nim]
symbol = " "
format = "[$symbol($version )]($style)"

[nix_shell]
symbol = " "
format = "[$symbol($version )]($style)"

[perl]
symbol = " "
format = "[$symbol($version )]($style)"

[ruby]
symbol = " "
format = "[$symbol($version )]($style)"

[scala]
symbol = " "
format = "[$symbol($version )]($style)"

[shlvl]
symbol = " "
format = "[$symbol($version )]($style)"

[swift]
symbol = "ﯣ "
format = "[$symbol($version )]($style)"
